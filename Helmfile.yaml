# Requires helm-diff
# helm plugin install https://github.com/databus23/helm-diff
repositories:
 - name: argocd
   url: https://argoproj.github.io/argo-helm
 - name: prometheus
   url: https://prometheus-community.github.io/helm-charts
 - name: grafana
   url: https://grafana.github.io/helm-charts
 - name: metrics-server
   url: https://kubernetes-sigs.github.io/metrics-server

releases:
  - name: argocd
    namespace: argocd
    createNamespace: false
    chart: argocd/argo-cd
    version: 8.1.3
    values:
      - apps/templates/argocd/values.yaml

  - name: metrics-server
    namespace: kube-system
    createNamespace: false
    chart: metrics-server/metrics-server
    version: 3.12.2
  
  # Host: http://prometheus-server.monitoring.svc.cluster.local
  - name: prometheus
    namespace: monitoring
    createNamespace: false
    chart: prometheus/prometheus
    version: 27.25.0
    values:
      # https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus/values.yaml
      - apps/templates/prometheus/values.yaml
  
  # Grafana: Dashboard for monitoring and visualizing metrics from Prometheus, Loki, and other data sources.
  # http://localhost:3000/a/grafana-lokiexplore-app/
  - name: grafana
    namespace: monitoring
    createNamespace: false
    chart: grafana/grafana
    version: 9.2.10
    values:
      # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
      - apps/templates/grafana/values.yaml
  
  # Monolithic: Recommended when you are running Loki as part of a small meta monitoring stack.
  # Microservices: For workloads that require high availability and scalability. Loki is deployed in this mode internally at Grafana Labs.
  # http://loki-gateway.monitoring.svc.cluster.local
  # Labels: http://localhost:3100/loki/api/v1/labels
  # Logs: http://localhost:3100/loki/api/v1/series
  - name: loki
    namespace: monitoring
    createNamespace: false
    chart: grafana/loki
    version: 6.31.0
    values:
      # https://github.com/grafana/loki/blob/main/production/helm/loki/values.yaml
      # Username: root-user
      # Password: supersecretpassword
        # kubectl -n monitoring get secret loki-minio -o jsonpath="{.data.rootPassword}" | base64 --decode
      - apps/templates/loki/values.yaml

  # Alloy is an open telemetry collector that provides a unified way to collect, process, and export telemetry data from your applications and infrastructure.
  # alloy convert --source-format=promtail --target-format=alloy --output=alloy.yaml promtail.yaml
  - name: alloy
    namespace: monitoring
    createNamespace: false
    chart: grafana/alloy
    version: 1.1.2
    values:
      # https://raw.githubusercontent.com/grafana/alloy/main/operations/helm/charts/alloy/values.yaml
      - apps/templates/alloy/values.yaml
